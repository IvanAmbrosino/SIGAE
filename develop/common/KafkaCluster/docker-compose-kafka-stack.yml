version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - kafka-net
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == worker]

  schema-registry:
    image: confluentinc/cp-schema-registry:7.4.10
    hostname: schema-registry
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
    networks:
      - kafka-net
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-broker-2:9092,PLAINTEXT_INTERNAL://localhost:29092
      SCHEMA_REGISTRY_DEBUG: 'true'
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == worker]

  kafka-broker-1:
    image: confluentinc/cp-kafka:7.4.10
    hostname: kafka-broker-1
    networks:
      - kafka-net
    ports:
      - "19092:19092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-1:9092,PLAINTEXT_INTERNAL://localhost:19092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_UNIQUE_PERSISTENT_VOLUME_ID: "kafka1-data"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_AUTO_LEADER_REBALANCE_ENABLE: "true"
      KAFKA_CONTROLLED_SHUTDOWN_ENABLE: "true"
      KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE: "false"
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT_MS: 18000
      KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS: 15000
      KAFKA_LOG_RETENTION_BYTES: -1
      KAFKA_LOG_SEGMENT_BYTES: 1073741824
      KAFKA_BROKER_RACK: "rack-1"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == worker]

  kafka-broker-2:
    image: confluentinc/cp-kafka:7.4.10
    hostname: kafka-broker-2
    networks:
      - kafka-net
    ports:
      - "29092:29092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-2:9092,PLAINTEXT_INTERNAL://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_UNIQUE_PERSISTENT_VOLUME_ID: "kafka2-data"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_AUTO_LEADER_REBALANCE_ENABLE: "true"
      KAFKA_CONTROLLED_SHUTDOWN_ENABLE: "true"
      KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE: "false"
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT_MS: 18000
      KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS: 15000
      KAFKA_LOG_RETENTION_BYTES: -1
      KAFKA_LOG_SEGMENT_BYTES: 1073741824
      KAFKA_BROKER_RACK: "rack-2"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == worker]

  kafka-broker-3:
    image: confluentinc/cp-kafka:7.4.10
    hostname: kafka-broker-3
    networks:
      - kafka-net
    ports:
      - "39092:39092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-3:9092,PLAINTEXT_INTERNAL://localhost:39092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_UNIQUE_PERSISTENT_VOLUME_ID: "kafka2-data"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_AUTO_LEADER_REBALANCE_ENABLE: "true"
      KAFKA_CONTROLLED_SHUTDOWN_ENABLE: "true"
      KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE: "false"
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT_MS: 18000
      KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS: 15000
      KAFKA_LOG_RETENTION_BYTES: -1
      KAFKA_LOG_SEGMENT_BYTES: 1073741824
      KAFKA_BROKER_RACK: "rack-3"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == worker]

  kafbat-ui:
    container_name: kafbat-ui
    image: ghcr.io/kafbat/kafka-ui:latest
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
    networks:
      - kafka-net
      - reverse-proxy-net
    ports:
      - 8082:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: TLE
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-broker-1:9092,kafka-broker-2:9092,kafka-broker-3:9092
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8081
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == worker]
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.kafbat-ui.rule=Host(`kafbat-test.et.conae.gov.ar`)"
        - "traefik.http.services.kafbat-ui.loadbalancer.server.port=8080"
        - "traefik.http.routers.kafbat-ui.entrypoints=web"
        - "traefik.http.services.kafbat-ui.loadbalancer.server.scheme=http"

networks:
  kafka-net:
    external: true
  reverse-proxy-net:
    external: true
